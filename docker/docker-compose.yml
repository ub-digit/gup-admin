version: '3.7'

services:
  admin-frontend:
    image: docker.ub.gu.se/gup-admin-admin-frontend:${GIT_REVISION}${PLATFORM}
    ports:
      - "${ADMIN_FRONTEND_HOST_PORT}:3000"
    environment:
      NUXT_API_BASE_URL: "http://admin-backend:4000/"
  admin-backend:
   image: docker.ub.gu.se/gup-admin-admin-backend:${GIT_REVISION}${PLATFORM}
   ports:
     - "${ADMIN_BACKEND_HOST_PORT}:4000"
   environment:
     ELASTIC_SEARCH_URL: "${ELASTIC_SEARCH_URL}"
     GUP_INDEX_MANAGER_URL: "${GUP_INDEX_MANAGER_URL}"
     GUP_INDEX_MANAGER_API_KEY: "${GUP_INDEX_MANAGER_API_KEY}"
   restart: always
   volumes:
     # Temporary fix until real index is in place
     - ../data/_source:/release/data/_source
     - ../data/scopus-normalised:/release/data/scopus-normalised
  index-manager-backend:
    image: docker.ub.gu.se/gup-admin-index-manager-backend:${GIT_REVISION}${PLATFORM}
    ports:
      - "${BACKEND_INDEX_MANAGER_HOST_PORT}:4000"
    environment:
      ELASTIC_SEARCH_URL: "${ELASTIC_SEARCH_URL}"
      GUP_BASE_URL: "${GUP_BASE_URL}"
    restart: always
    # volumes:
  admin-db:
    image: postgres:12
    environment:
      POSTGRES_USER: "${ADMIN_DB_USER}"
      POSTGRES_PASSWORD: "${ADMIN_DB_PASSWORD}"
      POSTGRES_DB: "${ADMIN_DB_NAME}"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "${DB_INIT_PATH}:/docker-entrypoint-initdb.d"
    ports:
     - "127.0.0.1:5433:5432"
    restart: always
  index-manager-db:
    image: postgres:12
    environment:
      POSTGRES_USER: "${ADMIN_DB_USER}"
      POSTGRES_PASSWORD: "${ADMIN_DB_USER}"
      POSTGRES_DB: "${INDEX_MANAGER_DB_NAME}"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "${DB_INDEX_MANAGER_INIT_PATH}:/docker-entrypoint-initdb.d"
    ports:
     - "127.0.0.1:5443:5432"
    restart: always
  elasticsearch:
    image: docker.ub.gu.se/gup-admin-elasticsearch:${GIT_REVISION}${PLATFORM}
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    restart: always
  gup-frontend:
    image: docker.ub.gu.se/gup-frontend:${GIT_REVISION_GUP}
    restart: always
    ports:
      - "3010:8080"
    environment:
      - EMBER_ENVIRONMENT=development
      - GUP_SERVICE_PORT=${GUP_BACKEND_PORT}
      - GUP_MAX_NUMBER_OF_POSTS_RIS=${GUP_MAX_NUMBER_OF_POSTS_RIS}
    # Keep the stdin open, so we can attach to our app container's process
    # and do things such as debugging, etc
    stdin_open: true
    # Enable sending signals (CTRL+C, CTRL+P + CTRL+Q) into the container
    tty: true
  gup-backend:
    image: docker.ub.gu.se/gup-backend:${GIT_REVISION_GUP}
    depends_on:
      - gup-db
    environment:
      - RAILS_ENV=${GUP_ENVIRONMENT}
      - RAILS_PORT=${GUP_RAILS_PORT}
      - GUP_AUTH_OVERRIDE=${GUP_AUTH_OVERRIDE}
      - GUP_SECRET_KEY_BASE=${GUP_SECRET_KEY_BASE}
      - GUP_DB_HOST=${GUP_DB_HOST}
      - GUP_DB_PORT=${GUP_DB_PORT}
      - GUP_DB=${GUP_DB}
      - GUP_DB_USER=${GUP_DB_USER}
      - GUP_DB_PASSWORD=${GUP_DB_PASSWORD}
      - GUP_SOLR_HOST=solr
      - GUP_SOLR_PORT=8983
      - GUP_TEST_USER_API_KEY=${GUP_TEST_USER_API_KEY}
      - GUP_SCOPUS_API_KEY=${GUP_SCOPUS_API_KEY}
      - GUP_GUPEA_OAI_BASE_URL=${GUP_GUPEA_OAI_BASE_URL}
      - GUP_GUPEA_OAI_METADATA_PREFIX=${GUP_GUPEA_OAI_METADATA_PREFIX}    
      - GUP_GUPEA_OAI_IDENTIFIER_PREFIX=${GUP_GUPEA_OAI_IDENTIFIER_PREFIX}
      - GUP_SMTP_SERVER=${GUP_SMTP_SERVER}
      - GUP_SMTP_PORT=${GUP_SMTP_PORT}
      - GUP_SMTP_AUTH=${GUP_SMTP_AUTH}
      - GUP_SMTP_USERNAME=${GUP_SMTP_USERNAME}
      - GUP_SMTP_PASSWORD=${GUP_SMTP_PASSWORD}
      - GUP_SMTP_ENABLE_STARTTLS_AUTO=${GUP_SMTP_ENABLE_STARTTLS_AUTO}
      - GUP_MAIL_FROM=${GUP_MAIL_FROM}
      - GUP_MAIL_TO=${GUP_MAIL_TO}
      - GUP_REPOSITORY_NAME=${GUP_REPOSITORY_NAME}
      - GUP_OAI_REPOSITORY_NAME=${GUP_OAI_REPOSITORY_NAME}
      - GUP_OAI_RECORD_PREFIX=${GUP_OAI_RECORD_PREFIX}
      - GUP_MQ_BASE_URL=${GUP_MQ_BASE_URL}
      - GUP_MQ_API_KEY=${GUP_MQ_API_KEY}
      - GUP_PUBLIC_BASE_URL=${GUP_PUBLIC_BASE_URL}
      - GUP_HOSTNAME=${BACKEND_OAI_HOSTNAME}
      - LOG_FILE_PATH=${LOG_FILE_PATH}
      - GUP_MAX_NUMBER_OF_POSTS_RIS=${GUP_MAX_NUMBER_OF_POSTS_RIS}
      - GUP_ADMIN_BASE_URL=${GUP_ADMIN_BASE_URL}
      - GUP_ADMIN_API_KEY=${GUP_ADMIN_API_KEY}
    ports:
      - ${GUP_BACKEND_PORT}:${GUP_RAILS_PORT}
    volumes:
      - ${GUP_BACKEND_UPLOADS_VOLUME_SOURCE}:/opt/gup-uploads
      - ${GUP_BACKEND_SITEMAPS_DIR}:/apps/gup/sitemaps
  gup-db:
    image: postgres:9.4
    environment:
      - POSTGRES_DB=${GUP_DB}
      - POSTGRES_USER=${GUP_DB_USER}
      - POSTGRES_PASSWORD=${GUP_DB_PASSWORD}
    volumes:
      - ./db-data-gup-seed:/docker-entrypoint-initdb.d
      - ${GUP_DB_VOLUME_SOURCE}:/var/lib/postgresql/data
  solr:
    image: docker.ub.gu.se/gup-solr:${GIT_REVISION_GUP}
    environment:
      - GUP_SOLR_DATA_IMPORT_DB_URL=jdbc:postgresql://db:5432/${GUP_DB}
      - GUP_SOLR_DATA_IMPORT_DB_USER=${GUP_DB_USER}
      - GUP_SOLR_DATA_IMPORT_DB_PASSWORD=${GUP_DB_PASSWORD}
    depends_on:
      - gup-db
    ports:
      - ${GUP_SOLR_PORT}:8983
    volumes:
      - ${GUP_SOLR_GURESEARCH_VOLUME_SOURCE}:/opt/solr/server/solr/mycores/gup-guresearch/data
      - ${GUP_SOLR_JOURNALS_VOLUME_SOURCE}:/opt/solr/server/solr/mycores/gup-journals/data
      - ${GUP_SOLR_PEOPLE_VOLUME_SOURCE}:/opt/solr/server/solr/mycores/gup-people/data
      - ${GUP_SOLR_PUBLICATIONS_VOLUME_SOURCE}:/opt/solr/server/solr/mycores/gup-publications/data
  gup-imports:
      image: docker.ub.gu.se/gup-imports:${GUP_IMPORTS_IMAGE_VERSION}
      restart: always
      environment:
        - GUP_ADMIN_BASE_URL=${GUP_INDEX_MANAGER_URL}
        - GUP_ADMIN_API_KEY=${GUP_INDEX_MANAGER_API_KEY}
      tty: true
      volumes:
        - ${HOST_SCOPUS_NORMALISED_JSON_FILES_DIR}:/data/files/scopus-normalised
        - ${HOST_SCRIPT_FILES_DIR}:/data/scripts