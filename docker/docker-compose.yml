name: "gup-admin"
services:
  admin-frontend:
    image: docker.ub.gu.se/gup-admin-frontend:${GIT_REVISION}${PLATFORM}
    restart: always
    env_file:
      - secrets.env
    environment:
      NUXT_API_BASE_URL: "${BACKEND_BASE_URL}"
      NUXT_PUBLIC_ALLOW_AUTHOR_EDIT: ${FRONTEND_ALLOW_AUTHOR_EDIT}
      NUXT_GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      NUXT_GU_CLIENT_ID: ${GU_CLIENT_ID}
      NUXT_AUTH_USERS: ${AUTH_USERS}
      NUXT_PUBLIC_DISALLOW_EDIT_PERSON_IDENTIFICATION_CODES: "${DISALLOW_EDIT_PERSON_IDENTIFICATION_CODES}"
    ports:
      - "${FRONTEND_HOST_PORT}:5000"
    networks:
      - gup-admin
  admin-backend:
    image: docker.ub.gu.se/gup-admin-backend:${GIT_REVISION}${PLATFORM}
    restart: always
    env_file:
      - secrets.env
    environment:
      ELASTICSEARCH_URL: "${ELASTICSEARCH_URL}"
      INDEX_MANAGER_URL: "${INDEX_MANAGER_URL}"
      VALID_PERSON_IDENTIFICATION_CODES: "${VALID_PERSON_IDENTIFICATION_CODES}"
      EXCLUDE_PERSON_IDENTIFICATION_CODES: "${EXCLUDE_PERSON_IDENTIFICATION_CODES}"
    volumes:
      # Temporary fix until real index is in place
      - ${BACKEND_SOURCE_HOST_PATH}:/app/data/_source
      - ${BACKEND_SCOPUS_NORMALISED_HOST_PATH}:/app/data/scopus-normalised
    ports:
      - "${BACKEND_HOST_PORT}:4000"
    networks:
      - gup
      - gup-admin
  index-manager-backend:
    image: docker.ub.gu.se/gup-admin-index-manager-backend:${GIT_REVISION}${PLATFORM}
    restart: always
    env_file:
      - secrets.env
    environment:
      ELASTICSEARCH_URL: "${ELASTICSEARCH_URL}"
      GUP_SERVER_BASE_URL: "${GUP_BACKEND_BASE_URL}"
    ports:
      - "${INDEX_MANAGER_BACKEND_HOST_PORT}:4000"
    networks:
      - gup
      - gup-admin
  admin-db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    volumes:
      - ./db-postgres-initdb.d:/docker-entrypoint-initdb.d
      - ${DB_DATA_HOST_PATH}:/var/lib/postgresql/data
    networks:
      - gup-admin
  index-manager-db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_USER}"
      POSTGRES_DB: "${INDEX_MANAGER_DB_NAME}"
    volumes:
      - ./index-manager-db-postgres-initdb.d:/docker-entrypoint-initdb.d
      - ${INDEX_MANAGER_DB_DATA_HOST_PATH}:/var/lib/postgresql/data
    networks:
      - gup-admin
  elasticsearch:
    image: docker.ub.gu.se/gup-admin-elasticsearch:${GIT_REVISION}${PLATFORM}
    restart: always
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - ${ELASTICSEARCH_DATA_HOST_PATH}:/usr/share/elasticsearch/data
    networks:
      - gup-admin
  gup-imports:
    image: docker.ub.gu.se/gup-imports:${GIT_REVISION_GUP_IMPORTS}
    restart: always
    env_file:
      - secrets.env
    environment:
      - GUP_ADMIN_BASE_URL=${INDEX_MANAGER_URL} #???? container env variable should be prefixed INDEX_MANAGER instead?
    tty: true
    volumes:
      - ${SCOPUS_NORMALISED_JSON_FILES_HOST_PATH}:/data/files/scopus-normalised
      - ${SCOPUS_SCRIPTS_HOST_PATH}:/data/scripts
    ports:
      - ${ELASTICSEARCH_HOST_PORT}:9200
    networks:
      - gup-admin
  kibana:
    image: docker.elastic.co/kibana/kibana:8.18.0
    restart: always
    environment:
      SERVER_NAME: ${KIBANA_SERVER_NAME}
      SERVER_PUBLIC_URL: ${KIBANA_PUBLIC_URL}
      ELASTICSEARCH_HOSTS: '["${ELASTICSEARCH_URL}"]'
      SERVER_BASEPATH: ${KIBANA_SERVER_BASEPATH}
      SERVER_REWRITEBASEPATH: "true"
    volumes:
      - ${KIBANA_DATA_HOST_PATH}:/usr/share/kibana/data
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - ${KIBANA_HOST_PORT}:5601
    networks:
      - gup-admin
networks:
  gup:
    name: gup
    external: true
  gup-admin:
