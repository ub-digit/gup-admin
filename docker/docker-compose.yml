version: '3.7'

services:
  backend:
   image: docker.ub.gu.se/gup-admin-backend:${GIT_REVISION}
   ports:
     - "${BACKEND_HOST_PORT}:4000"
   environment:
     ELASTIC_SEARCH_URL: "${ELASTIC_SEARCH_URL}"
     ALERT_MESSAGE_FILE_PATH: "${ALERT_MESSAGE_FILE_PATH}"
     GUP_INDEX_MANAGER_URL: "${GUP_INDEX_MANAGER_URL}"
     GUP_INDEX_MANAGER_API_KEY: "${GUP_INDEX_MANAGER_API_KEY}"
   restart: always
   volumes:
#     - "${HOST_ALERT_MESSAGE_FILE_PATH}:${ALERT_MESSAGE_FILE_PATH}"
     # Temporary fix until real index is in place
     - ../data/_source:/release/data/_source
     - ../data/scopus-normalised:/release/data/scopus-normalised

  index-manager:
    image: docker.ub.gu.se/gup-admin-index-manager:${GIT_REVISION}
    ports:
      - "${INDEX_MANAGER_HOST_PORT}:4000"
    environment:
      ELASTIC_SEARCH_URL: "${ELASTIC_SEARCH_URL}"
      GUP_BASE_URL: "${GUP_BASE_URL}"
    restart: always
    # volumes:
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "${DB_INIT_PATH}:/docker-entrypoint-initdb.d"
    ports:
     - "127.0.0.1:5433:5432"
    restart: always
  db-index-manager:
    image: postgres:12
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${INDEX_MANAGER_DB_NAME}"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "${DB_INDEX_MANAGER_INIT_PATH}:/docker-entrypoint-initdb.d"
    ports:
     - "127.0.0.1:5443:5432"
    restart: always
  elasticsearch:
    image: docker.ub.gu.se/gup-admin-elasticsearch:${GIT_REVISION}
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    restart: always