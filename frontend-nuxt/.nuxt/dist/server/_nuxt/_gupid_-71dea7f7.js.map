{"version":3,"file":"_gupid_-71dea7f7.js","sources":["../../../../pages/publications/post/[id]/gup/[gupid].vue"],"sourcesContent":["<template>\n    <div>\n      <ErrorLoadingPost v-if=\"errorGupPostById\" :error=\"errorGupPostById\"/>\n      <div v-else>\n        <div class=\"row\">\n          <div class=\"col\">\n            <h2 class=\"pb-0 mb-4\">{{ gupPostById.title }}</h2>\n          </div>\n          <div v-if=\"pendingGupPostById\" class=\"col-auto\">\n            <Spinner class=\"me-4\"/>            \n            </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col\">\n            <PostDisplay :post=\"gupPostById\" />\n          </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useGupPostsStore } from '~/store/gup_posts'\nimport { storeToRefs } from 'pinia'\nconst {t} = useI18n();\nconst router = useRouter();\nconst route = useRoute();\nconst gupPostsStore = useGupPostsStore()\nconst { fetchGupPostById } = gupPostsStore\nconst { gupPostById, pendingGupPostById, errorGupPostById} = storeToRefs(gupPostsStore)\nawait fetchGupPostById(route.params.gupid);\n\n//const { data: post, pending, error, refresh } = await useFetch(`/api/post_gup/${route.params.gupid}`);\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA,YAAA;AACA,cAAA;AACA,UAAA,QAAA,SAAA;AACA,UAAA,gBAAA,iBAAA;AACA,UAAA,EAAA,iBAAA,IAAA;AACA,UAAA,EAAA,aAAA,oBAAA,iBAAA,IAAA,YAAA,aAAA;AACA,IAAM,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,iBAAA,MAAA,OAAA,KAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}