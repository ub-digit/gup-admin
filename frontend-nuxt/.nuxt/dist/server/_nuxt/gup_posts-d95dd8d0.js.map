{"version":3,"file":"gup_posts-d95dd8d0.js","sources":["../../../../components/PostMeta.vue","../../../../components/PostField.vue","../../../../components/PostDisplay.vue","../../../../store/gup_posts.js"],"sourcesContent":["<template>\n    <div>\n        <ul class=\"list-inline\">\n          <li class=\"list-inline-item\"><font-awesome-icon class=\"text-danger\" icon=\"fa-solid fa-flag\" /> {{ t('views.publications.form.needs_attention') }}</li>\n          <li class=\"list-inline-item\"><font-awesome-icon class=\"text-info\" icon=\"fa-solid fa-file-arrow-down\" /> {{ t('views.publications.post.import_from_scopus') }}</li>\n          <li class=\"list-inline-item\"><font-awesome-icon class=\"text-warning\" icon=\"fa-solid fa-award\" /> {{ props.post.date }} {{ t(\"views.publications.post.by\") }} {{ props.post.creator }}</li>\n        </ul>\n    </div>\n</template>\n\n<script setup>\nconst {t} = useI18n();\nconst props = defineProps(['post'])\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>","<template>\n    <div class=\"row mb-2\">\n        <div class=\"col-4 fw-bold\">\n            <slot name=\"label\">\n            </slot>\n        </div>\n        <div class=\"col-8\">\n            <slot name=\"content\"></slot>\n        </div>\n    </div>\n</template>\n\n<script setup>\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>","<template>\n    <div>\n        <PostMeta class=\"mb-4\" :post=\"post\"/>\n        <div class=\"fields mb-4\">\n            <PostField>\n            <template v-slot:label>\n            {{ t('views.publications.post.fields.pubtype') }}\n            </template>\n            <template v-slot:content>\n                {{ post.pubtype }}\n            </template>\n            </PostField>\n            <PostField>\n            <template v-slot:label>\n                {{ t('views.publications.post.fields.published_in') }}\n            </template>\n            <template v-slot:content>\n                {{ post.published_in }}\n            </template>\n            </PostField>\n            <PostField>\n            <template v-slot:label>\n                {{ t('views.publications.post.fields.pubyear') }}\n            </template>\n            <template v-slot:content>\n                {{ post.date }}\n            </template>\n            </PostField>\n            <PostField>\n            <template v-slot:label>\n                {{ t('views.publications.post.fields.author') }}\n            </template>\n            <template v-slot:content>\n                <ul class=\"list-unstyled mb-0\">\n                <li v-for=\"author in post.authors\" :key=\"author.id\">\n                    {{ author.name }}\n                </li>\n                </ul>\n            </template>\n            </PostField>\n            <PostField>\n            <template v-slot:label>\n                {{ t('views.publications.post.fields.doi') }}\n            </template>\n            <template v-slot:content>\n                <a :href=\"post.doi\" target=\"_blank\">{{ post.doi }}</a>\n            </template>\n            </PostField>\n            <PostField>\n            <template v-slot:label>\n                {{ t('views.publications.post.fields.scopus') }}\n            </template>\n            <template v-slot:content>\n                <span v-if=\"post.scopus_id\">\n                <a :href=\"post.scopus_id\">{{ post.scopus_id }}</a>\n                </span>\n                <span class=\"badge bg-danger\" v-else>\n                {{ t('views.publications.post.fields.scopus_missing')  }}\n                </span>\n            </template>\n            </PostField>\n        </div>\n    </div>\n</template>\n\n<script setup>\nconst {t} = useI18n();\nconst props = defineProps(['post']);\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>","import { defineStore } from 'pinia'\n\nexport const useGupPostsStore = defineStore('gupPostsStore', () => {\n  const gupPostsByTitle = ref([])\n  const gupPostsById = ref([])\n  const gupPostById = ref({});\n  const errorGupPostById = ref(null);\n  const pendingGupPostsByTitle= ref(null);\n  const pendingGupPostsById= ref(null);\n  const pendingGupPostById= ref(null);\n\n  async function fetchGupPostsById(id) {\n    try {\n      pendingGupPostsById.value = true;\n      const { data, error } = await useFetch(\"/api/posts_gup_by_id\", {\n          params: {\"id\": id}\n      });\n      gupPostsById.value = data.value;\n    } catch (error) {\n      console.log(\"Something went wrong: fetchGupPostsById\")\n    }\n    finally {\n      pendingGupPostsById.value = false;\n    }\n\n  }\n\n\n  async function fetchGupPostsByTitle(id, title) {\n    try {\n      pendingGupPostsByTitle.value = true;\n      const { data, error } = await useFetch(\"/api/posts_gup_by_title\", {\n            params: {\"id\": id, \"title\": title }\n          });\n      gupPostsByTitle.value = data.value;\n    } catch (error) {\n      console.log(\"Something went wrong: fetchGupPostsByTitle\")\n    }\n    finally {\n      pendingGupPostsByTitle.value = false;\n    }\n\n  }\n\n\n  async function fetchGupPostById(id) {\n    try {\n      pendingGupPostById.value = true;\n      const { data, error } = await  useFetch(`/api/post_gup/${id}`)\n      if (error.value) {\n        errorGupPostById.value = error.value.data;\n      } else {\n        gupPostById.value = data.value;\n      }\n    } catch (error) {\n      //return createError({ statusCode: 404, statusMessage: 'Post Not Found' })\n      console.log(\"Something went wrong: fetchGupPostById\")\n    }\n    finally {\n      pendingGupPostById.value = false;\n    }\n\n  }\n\n\n  \n  function paramsSerializer(params) {\n    //https://github.com/unjs/ufo/issues/62\n    if (!params) {\n      return;\n    }\n    Object.entries(params).forEach(([key, val]) => {\n      if (typeof val === \"object\" && Array.isArray(val) && val !== null) {\n        params[key + \"[]\"] = val.map((v) => JSON.stringify(v));\n        delete params[key];\n      } \n    });\n  }\n\n\n  function $reset() {\n    // manually reset store here\n  }\n  return { gupPostsByTitle,fetchGupPostsByTitle, pendingGupPostsByTitle, gupPostsById,fetchGupPostsById, pendingGupPostsById, gupPostById, errorGupPostById, fetchGupPostById, pendingGupPostById}\n})"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,UAAA,EAAA,EAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVS,SAAA,eAAA,MAAA,OAAA,SAAA,QAAgB;;;;;;;;;;;;;;;;;;;ACiEzB,UAAA,EAAA,EAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA,MAAA,mBAAA,YAAA,iBAAA,MAAA;AACA,QAAA,kBAAA,IAAA,EAAA;AACA,QAAA,eAAA,IAAA,EAAA;AACA,QAAA,cAAA,IAAA,CAAA,CAAA;AACA,QAAA,mBAAA,IAAA,IAAA;AACA,QAAA,yBAAA,IAAA,IAAA;AACA,QAAA,sBAAA,IAAA,IAAA;AACA,QAAA,qBAAA,IAAA,IAAA;AAEA,iBAAA,kBAAA,IAAA;AACA,QAAA;AACA,0BAAA,QAAA;AACA,YAAA,EAAA,MAAA,MAAA,IAAA,MAAA,SAAA,wBAAA;AAAA,QACA,QAAA,EAAA,MAAA,GAAA;AAAA,MACA,GAAA,aAAA;AACA,mBAAA,QAAA,KAAA;AAAA,IACA,SAAA,OAAA;AACA,cAAA,IAAA,yCAAA;AAAA,IACA,UACA;AACA,0BAAA,QAAA;AAAA,IACA;AAAA,EAEA;AAGA,iBAAA,qBAAA,IAAA,OAAA;AACA,QAAA;AACA,6BAAA,QAAA;AACA,YAAA,EAAA,MAAA,MAAA,IAAA,MAAA,SAAA,2BAAA;AAAA,QACA,QAAA,EAAA,MAAA,IAAA,SAAA,MAAA;AAAA,MACA,GAAA,aAAA;AACA,sBAAA,QAAA,KAAA;AAAA,IACA,SAAA,OAAA;AACA,cAAA,IAAA,4CAAA;AAAA,IACA,UACA;AACA,6BAAA,QAAA;AAAA,IACA;AAAA,EAEA;AAGA,iBAAA,iBAAA,IAAA;AACA,QAAA;AACA,yBAAA,QAAA;AACA,YAAA,EAAA,MAAA,MAAA,IAAA,MAAA,SAAA,iBAAA,MAAA,aAAA;AACA,UAAA,MAAA,OAAA;AACA,yBAAA,QAAA,MAAA,MAAA;AAAA,MACA,OAAA;AACA,oBAAA,QAAA,KAAA;AAAA,MACA;AAAA,IACA,SAAA,OAAA;AAEA,cAAA,IAAA,wCAAA;AAAA,IACA,UACA;AACA,yBAAA,QAAA;AAAA,IACA;AAAA,EAEA;AAqBA,SAAA,EAAA,iBAAA,sBAAA,wBAAA,cAAA,mBAAA,qBAAA,aAAA,kBAAA,kBAAA,mBAAA;AACA,CAAA;"}