{"version":3,"file":"Spinner-cea46663.js","sources":["../../../../node_modules/nuxt/dist/app/composables/asyncData.js","../../../../node_modules/nuxt/dist/app/composables/fetch.js","../../../../components/Spinner.vue"],"sourcesContent":["import { onBeforeMount, onServerPrefetch, onUnmounted, ref, getCurrentInstance, watch, unref, toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt\";\nimport { createError } from \"./error\";\nconst getDefault = () => null;\nexport function useAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  let [key, handler, options = {}] = args;\n  if (typeof key !== \"string\") {\n    throw new TypeError(\"[nuxt] [asyncData] key must be a string.\");\n  }\n  if (typeof handler !== \"function\") {\n    throw new TypeError(\"[nuxt] [asyncData] handler must be a function.\");\n  }\n  options.server = options.server ?? true;\n  options.default = options.default ?? getDefault;\n  options.lazy = options.lazy ?? false;\n  options.immediate = options.immediate ?? true;\n  const nuxt = useNuxtApp();\n  const getCachedData = () => nuxt.isHydrating ? nuxt.payload.data[key] : nuxt.static.data[key];\n  const hasCachedData = () => getCachedData() !== void 0;\n  if (!nuxt._asyncData[key]) {\n    nuxt._asyncData[key] = {\n      data: ref(getCachedData() ?? options.default?.() ?? null),\n      pending: ref(!hasCachedData()),\n      error: ref(nuxt.payload._errors[key] ? createError(nuxt.payload._errors[key]) : null)\n    };\n  }\n  const asyncData = { ...nuxt._asyncData[key] };\n  asyncData.refresh = asyncData.execute = (opts = {}) => {\n    if (nuxt._asyncDataPromises[key]) {\n      if (opts.dedupe === false) {\n        return nuxt._asyncDataPromises[key];\n      }\n      nuxt._asyncDataPromises[key].cancelled = true;\n    }\n    if (opts._initial && hasCachedData()) {\n      return getCachedData();\n    }\n    asyncData.pending.value = true;\n    const promise = new Promise(\n      (resolve, reject) => {\n        try {\n          resolve(handler(nuxt));\n        } catch (err) {\n          reject(err);\n        }\n      }\n    ).then((_result) => {\n      if (promise.cancelled) {\n        return nuxt._asyncDataPromises[key];\n      }\n      let result = _result;\n      if (options.transform) {\n        result = options.transform(_result);\n      }\n      if (options.pick) {\n        result = pick(result, options.pick);\n      }\n      asyncData.data.value = result;\n      asyncData.error.value = null;\n    }).catch((error) => {\n      if (promise.cancelled) {\n        return nuxt._asyncDataPromises[key];\n      }\n      asyncData.error.value = error;\n      asyncData.data.value = unref(options.default?.() ?? null);\n    }).finally(() => {\n      if (promise.cancelled) {\n        return;\n      }\n      asyncData.pending.value = false;\n      nuxt.payload.data[key] = asyncData.data.value;\n      if (asyncData.error.value) {\n        nuxt.payload._errors[key] = createError(asyncData.error.value);\n      }\n      delete nuxt._asyncDataPromises[key];\n    });\n    nuxt._asyncDataPromises[key] = promise;\n    return nuxt._asyncDataPromises[key];\n  };\n  const initialFetch = () => asyncData.refresh({ _initial: true });\n  const fetchOnServer = options.server !== false && nuxt.payload.serverRendered;\n  if (process.server && fetchOnServer && options.immediate) {\n    const promise = initialFetch();\n    if (getCurrentInstance()) {\n      onServerPrefetch(() => promise);\n    } else {\n      nuxt.hook(\"app:created\", () => promise);\n    }\n  }\n  if (process.client) {\n    const instance = getCurrentInstance();\n    if (instance && !instance._nuxtOnBeforeMountCbs) {\n      instance._nuxtOnBeforeMountCbs = [];\n      const cbs = instance._nuxtOnBeforeMountCbs;\n      if (instance) {\n        onBeforeMount(() => {\n          cbs.forEach((cb) => {\n            cb();\n          });\n          cbs.splice(0, cbs.length);\n        });\n        onUnmounted(() => cbs.splice(0, cbs.length));\n      }\n    }\n    if (fetchOnServer && nuxt.isHydrating && hasCachedData()) {\n      asyncData.pending.value = false;\n    } else if (instance && (nuxt.payload.serverRendered && nuxt.isHydrating || options.lazy) && options.immediate) {\n      instance._nuxtOnBeforeMountCbs.push(initialFetch);\n    } else if (options.immediate) {\n      initialFetch();\n    }\n    if (options.watch) {\n      watch(options.watch, () => asyncData.refresh());\n    }\n    const off = nuxt.hook(\"app:data:refresh\", (keys) => {\n      if (!keys || keys.includes(key)) {\n        return asyncData.refresh();\n      }\n    });\n    if (instance) {\n      onUnmounted(off);\n    }\n  }\n  const asyncDataPromise = Promise.resolve(nuxt._asyncDataPromises[key]).then(() => asyncData);\n  Object.assign(asyncDataPromise, asyncData);\n  return asyncDataPromise;\n}\nexport function useLazyAsyncData(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [key, handler, options] = args;\n  return useAsyncData(key, handler, { ...options, lazy: true }, null);\n}\nexport function useNuxtData(key) {\n  const nuxt = useNuxtApp();\n  if (!(key in nuxt.payload.data)) {\n    nuxt.payload.data[key] = null;\n  }\n  return {\n    data: toRef(nuxt.payload.data, key)\n  };\n}\nexport async function refreshNuxtData(keys) {\n  if (process.server) {\n    return Promise.resolve();\n  }\n  const _keys = keys ? Array.isArray(keys) ? keys : [keys] : void 0;\n  await useNuxtApp().hooks.callHookParallel(\"app:data:refresh\", _keys);\n}\nexport function clearNuxtData(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.data);\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : Array.isArray(keys) ? keys : [keys];\n  for (const key of _keys) {\n    if (key in nuxtApp.payload.data) {\n      nuxtApp.payload.data[key] = void 0;\n    }\n    if (key in nuxtApp.payload._errors) {\n      nuxtApp.payload._errors[key] = void 0;\n    }\n    if (nuxtApp._asyncData[key]) {\n      nuxtApp._asyncData[key].data.value = void 0;\n      nuxtApp._asyncData[key].error.value = void 0;\n      nuxtApp._asyncData[key].pending.value = false;\n    }\n    if (key in nuxtApp._asyncDataPromises) {\n      nuxtApp._asyncDataPromises[key] = void 0;\n    }\n  }\n}\nfunction pick(obj, keys) {\n  const newObj = {};\n  for (const key of keys) {\n    newObj[key] = obj[key];\n  }\n  return newObj;\n}\n","import { computed, unref, reactive } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useRequestFetch } from \"./ssr\";\nimport { useAsyncData } from \"./asyncData\";\nexport function useFetch(request, arg1, arg2) {\n  const [opts = {}, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  const _key = opts.key || hash([autoKey, unref(opts.baseURL), typeof request === \"string\" ? request : \"\", unref(opts.params || opts.query)]);\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useFetch] key must be a string: \" + _key);\n  }\n  if (!request) {\n    throw new Error(\"[nuxt] [useFetch] request is missing.\");\n  }\n  const key = _key === autoKey ? \"$f\" + _key : _key;\n  const _request = computed(() => {\n    let r = request;\n    if (typeof r === \"function\") {\n      r = r();\n    }\n    return unref(r);\n  });\n  const {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    watch,\n    immediate,\n    ...fetchOptions\n  } = opts;\n  const _fetchOptions = reactive({\n    ...fetchOptions,\n    cache: typeof opts.cache === \"boolean\" ? void 0 : opts.cache\n  });\n  const _asyncDataOptions = {\n    server,\n    lazy,\n    default: defaultFn,\n    transform,\n    pick,\n    immediate,\n    watch: [\n      _fetchOptions,\n      _request,\n      ...watch || []\n    ]\n  };\n  let controller;\n  const asyncData = useAsyncData(key, () => {\n    controller?.abort?.();\n    controller = typeof AbortController !== \"undefined\" ? new AbortController() : {};\n    const isLocalFetch = typeof _request.value === \"string\" && _request.value.startsWith(\"/\");\n    let _$fetch = opts.$fetch || globalThis.$fetch;\n    if (process.server && !opts.$fetch && isLocalFetch) {\n      _$fetch = useRequestFetch();\n    }\n    return _$fetch(_request.value, { signal: controller.signal, ..._fetchOptions });\n  }, _asyncDataOptions);\n  return asyncData;\n}\nexport function useLazyFetch(request, arg1, arg2) {\n  const [opts, autoKey] = typeof arg1 === \"string\" ? [{}, arg1] : [arg1, arg2];\n  return useFetch(\n    request,\n    {\n      ...opts,\n      lazy: true\n    },\n    // @ts-ignore\n    autoKey\n  );\n}\n","<template>\n    <div>\n        <font-awesome-icon class=\"float-end\" icon=\"fas fa-circle-notch \" spin />\n    </div>\n</template>\n\n<script setup>\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"names":["_a","pick","_ssrRenderComponent"],"mappings":"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","x_google_ignoreList":[0,1]}